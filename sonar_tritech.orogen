name "sonar_tritech"
version "0.1"

#Checkt Package Config nach include pfaden (hier z.B. Sonar.h
using_library "sonar_tritech"

import_types_from "base"
import_types_from "sonar_tritech/SeaNetTypes.hpp"

task_context "Micron" do
	property("config", "sea_net::MicronConfig").
            doc("Configuration for Sonar").
            dynamic

        output_port("ground_distance", "base::samples::RigidBodyState").
                doc "Current Ground Distance, if Microns DST EchoSounder is connected"

	output_port("sonar_beam","base::samples::SonarBeam").
		doc "Sonar beams"

        property('ground_frame','/std/string','echosounder_frame')

	property('port', '/std/string', "").
            doc 'the device port'
	property('baudrate', 'int', 115200).
            doc 'baudrate of the device port'
        property('read_timeout', 'double', 0.5).
            doc "timeout for reading sonar beams in seconds"
        property('write_timeout', 'double', 0.1).
            doc "timeout for writing to the serial port in seconds"
        property('configure_timeout', 'double', 10.0).
            doc "timeout for configuring the device in seconds"
        property('echo_sounder_timeout', 'double', 0.0).
            doc "timeout for the dst micron dst echo sounder. Set it to 0 if none is connected"
	
	fatal_states :IO_ERROR, :INVALID_CONFIGURATION
	needs_configuration
	fd_driven
end

task_context "Echosounder" do
        output_port("ground_distance", "base::samples::RigidBodyState").
                doc "Current Ground Distance"

        property('ground_frame','/std/string','echosounder_frame')
	
        property('port', '/std/string', "").
            doc 'the device port'
        property('baudrate', 'int', 115200)

        property('echo_sounder_timeout', 'double', 1.0).
            doc "timeout for the dst micron dst echo sounder."
	
        fatal_states :IO_ERROR

	needs_configuration
	fd_driven
end

task_context "Profiling" do
        property("config", "sea_net::ProfilingConfig").
            doc("Configuration for Sonar").
            dynamic

	output_port("profiling_scan","base::samples::LaserScan").
            doc "Transmitting Sonar Data"
	
        property('port', '/std/string', "").
            doc 'the device port'
	property('baudrate', 'int', 115200).
            doc 'baudrate of the device port'
        property('read_timeout', 'double', 0.5).
            doc "timeout for reading sonar beams in seconds"
        property('write_timeout', 'double', 0.1).
            doc "timeout for writing to the serial port in seconds"
        property('configure_timeout', 'double', 10.0).
            doc "timeout for configuring the device in seconds"
        
	fatal_states :IO_ERROR, :INVALID_CONFIGURATION

	needs_configuration
	fd_driven
end
